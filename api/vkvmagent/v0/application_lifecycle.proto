/*
This sample, non-production-ready code contains a Virtual Kubelet EC2-based provider and example VM Agent implementation.
Â© 2021 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.

This AWS Content is provided subject to the terms of the AWS Customer Agreement
available at http://aws.amazon.com/agreement or other written agreement between
Customer and either Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.
*/

// This file describes the application lifecycle API exposed by the VKVMAgent.  The agent manages one or more
// "applications".

syntax = "proto3";

package vkvmagent.v0;

import "k8s.io/api/core/v1/generated.proto";

option go_package = "github.com/aws/aws-virtual-kubelet/api/vkvmagent_v0";

service ApplicationLifecycle {
  rpc LaunchApplication(LaunchApplicationRequest) returns (LaunchApplicationResponse);
  rpc TerminateApplication(TerminateApplicationRequest) returns (TerminateApplicationResponse);
  rpc CheckApplicationHealth(ApplicationHealthRequest) returns (ApplicationHealthResponse);
  rpc WatchApplicationHealth(ApplicationHealthRequest) returns (stream ApplicationHealthResponse);
}

message LaunchApplicationRequest {
  k8s.io.api.core.v1.Pod pod = 1;
}

message LaunchApplicationResponse {}

message TerminateApplicationRequest {}

message TerminateApplicationResponse {}

message ApplicationHealthRequest {}

message ApplicationHealthResponse {
  k8s.io.api.core.v1.PodStatus podStatus = 1;
}
