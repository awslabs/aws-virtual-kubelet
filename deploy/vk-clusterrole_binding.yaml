# This sample, non-production-ready code contains a Virtual Kubelet EC2-based provider and example VM Agent implementation.
# Â© 2021 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.
#
# This AWS Content is provided subject to the terms of the AWS Customer Agreement
# available at http://aws.amazon.com/agreement or other written agreement between
# Customer and either Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.
---
# Upstream virtual-kubelet is the originator of these rules and their operations (this provider implementation is one
#  layer below and generally does not interact directly with the Kubernetes API
# NOTE these rules are modeled after the upstream virtual-kubelet rule set in the e2e tests:
# https://github.com/virtual-kubelet/virtual-kubelet/blob/7c9bd20eea6f4b37929fb765ca80d69262ca51c5/hack/skaffold/virtual-kubelet/base.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-vk-admin
  namespace: kube-system
rules:
  - verbs:
      - get # get virtual node info from k8s
      - create # create virtual node in k8s
    apiGroups:
      - ''
    resources:
      - nodes # virtual-kubelet node
  - verbs:
      - patch # update virtual node status
    apiGroups:
      - ''
    resources:
      - nodes/status # virtual-kubelet node status
  - verbs:
      - create # create k8s events
      - patch # update k8s events
    apiGroups:
      - ''
    resources:
      - events # events to broadcast changes to the k8s system
  - verbs:
      - list # list pods
      - get # get a pod
      - watch # monitor pod status
      - update # update a pod status
      - delete # delete a pod
      - create # create a pod
    apiGroups:
      - ''
    resources:
      - pods # virtual-kubelet pods
      - pods/status # virtual-kubelet pod status
  - verbs:
      - list # list services or persistent volumes (or the claims pods request against volumes)
      - get # get a service, persistent volume, or claim
      - watch # watch a service, persistent volume, or claim
    apiGroups:
      - ''
    resources:
      - services # services exposed by the virtual kubelet resource manager
      - persistentvolumes # enable volume mounts for virtual kubelet pods
      - persistentvolumeclaims # enable pod claims against volumes for virtual kubelet pods
  - verbs:
      - get # get a configMap or secret
      - list # list configMaps or secrets
      - watch # watch a configMap or secret for changes
      - create # create a configMap or secret
      - update # update a configMap or secret
    apiGroups:
      - ''
    resources:
      - configmaps # used by virtual kubelet and secure VKVMAgent connections
      - secrets # used by virtual kubelet and secure VKVMAgent connections
  - verbs:
      - create # create a lease for a resource
      - get # get the lease for a resource
      - list # list resource leases
      - update # update a resource lease
    apiGroups:
      - coordination.k8s.io
    resources:
      - leases # leases create time-bound access to resources and are used by virtual kubelet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: virtual-kubelet-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-vk-admin
subjects:
  - kind: ServiceAccount
    name: virtual-kubelet-sa
    namespace: kube-system